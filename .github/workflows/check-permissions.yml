name: 检查文件夹权限

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  check-folder-permissions:
    runs-on: ubuntu-latest
    name: 检查学生是否只修改了自己的文件夹
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: 获取变更的文件
      id: changed-files
      uses: tj-actions/changed-files@v40
      with:
        files: |
          23区块链*班_*_*/**
    
    - name: 检查权限
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        echo "检测到以下文件发生变更:"
        echo "${{ steps.changed-files.outputs.all_changed_files }}"
        
        # 获取提交者信息（从PR或commit中）
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          AUTHOR="${{ github.event.pull_request.user.login }}"
          echo "PR作者: $AUTHOR"
        else
          AUTHOR="${{ github.actor }}"
          echo "提交者: $AUTHOR"
        fi
        
        # 检查每个变更的文件
        violation_found=false
        
        for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
          echo "检查文件: $file"
          
          # 提取文件夹名称（学生文件夹格式：23区块链XX班_学号_姓名）
          folder_name=$(echo "$file" | cut -d'/' -f1)
          
          # 检查是否是学生文件夹
          if [[ $folder_name =~ ^23区块链[0-9]+班_[0-9]+_.+$ ]]; then
            echo "这是学生文件夹: $folder_name"
            
            # 提取学号
            student_id=$(echo "$folder_name" | sed -n 's/^23区块链[0-9]\+班_\([0-9]\+\)_.*/\1/p')
            echo "学号: $student_id"
            
            # 这里可以添加更复杂的权限检查逻辑
            # 例如：检查GitHub用户名是否与学号匹配
            # 或者维护一个学号到GitHub用户名的映射表
            
            echo "✅ 文件 $file 在允许的学生文件夹中"
          else
            echo "❌ 检测到对非学生文件夹的修改: $file"
            echo "学生只能修改自己的文件夹（格式：23区块链XX班_学号_姓名）"
            violation_found=true
          fi
        done
        
        if [ "$violation_found" = true ]; then
          echo "❌ 权限检查失败！发现违规修改。"
          echo "请确保只修改自己的文件夹内容。"
          exit 1
        else
          echo "✅ 权限检查通过！所有修改都在允许的范围内。"
        fi
    
    - name: 检查根目录文件
      run: |
        # 检查是否修改了根目录的重要文件
        root_files_changed=$(git diff --name-only HEAD~1 HEAD | grep -E '^(README\.md|\.gitignore|\.github/|create_.*\.py|studentInfo\.xlsx)$' || true)
        
        if [ -n "$root_files_changed" ] && [ "${{ github.actor }}" != "teacher-username" ]; then
          echo "❌ 检测到对根目录重要文件的修改:"
          echo "$root_files_changed"
          echo "学生不允许修改这些文件，只有教师可以修改。"
          exit 1
        fi
        
        echo "✅ 根目录文件检查通过。"
    
    - name: 输出检查结果
      if: always()
      run: |
        if [ $? -eq 0 ]; then
          echo "🎉 所有权限检查都通过了！"
          echo "您的修改符合仓库规则。"
        else
          echo "❌ 权限检查失败。"
          echo "请检查您的修改是否符合以下规则："
          echo "1. 只能修改自己的文件夹（23区块链XX班_学号_姓名）"
          echo "2. 不能修改其他同学的文件夹"
          echo "3. 不能修改根目录的配置文件"
        fi